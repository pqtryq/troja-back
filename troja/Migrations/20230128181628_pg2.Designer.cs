// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using troja.Data;

#nullable disable

namespace troja.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230128181628_pg2")]
    partial class pg2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("troja.Models.Country", b =>
                {
                    b.Property<int>("Idcountry")
                        .HasColumnType("integer")
                        .HasColumnName("idcountry");

                    b.Property<string>("Countryname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("countryname");

                    b.HasKey("Idcountry")
                        .HasName("pk_country");

                    b.ToTable("country", (string)null);
                });

            modelBuilder.Entity("troja.Models.Reservation", b =>
                {
                    b.Property<int>("Idreservation")
                        .HasColumnType("integer")
                        .HasColumnName("idreservation");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("firstname");

                    b.Property<int>("Idtravel")
                        .HasColumnType("integer")
                        .HasColumnName("idtravel");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.Property<int>("Nop")
                        .HasColumnType("integer")
                        .HasColumnName("nop");

                    b.Property<DateTime>("Orderdatetime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("orderdatetime");

                    b.Property<float>("PhoneNumber")
                        .HasColumnType("real")
                        .HasColumnName("phonenumber");

                    b.HasKey("Idreservation")
                        .HasName("pk_reservation");

                    b.ToTable("reservation", (string)null);
                });

            modelBuilder.Entity("troja.Models.Travel", b =>
                {
                    b.Property<int>("Idtravel")
                        .HasColumnType("integer")
                        .HasColumnName("idtravel");

                    b.Property<DateOnly>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<string>("Hotel")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hotel");

                    b.Property<int>("Idcountry")
                        .HasColumnType("integer")
                        .HasColumnName("idcountry");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("location");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<int>("Remslots")
                        .HasColumnType("integer")
                        .HasColumnName("remslots");

                    b.Property<int>("Slots")
                        .HasColumnType("integer")
                        .HasColumnName("slots");

                    b.Property<DateOnly>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<string>("Xcord")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("xcord");

                    b.Property<string>("Ycord")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ycord");

                    b.HasKey("Idtravel")
                        .HasName("pk_travel");

                    b.ToTable("travel", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
